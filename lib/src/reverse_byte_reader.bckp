import 'dart:io';

class ReverseByteReader {
  final RandomAccessFile _raf;
  int _index;

  ReverseByteReader(RandomAccessFile raf)
    : assert(raf != null),
      _raf = raf,
      _index = raf.lengthSync();

  int get nextByte {
    if (_index < 0) return -1;
    int b = _raf.readByteSync();
    _index--;
    return b;
  }

  // int fixReadPosition() {
  //   int difference = _buffer.length - _bufferIndex;
  //   int filePosition = _raf.positionSync();
  //   if (difference == 0) return filePosition;
  //   filePosition -= difference;
  //   _raf.setPositionSync(filePosition);
  //   return filePosition;
  // }
}

// class ReverseByteReader {
//   final RandomAccessFile _raf;
//   final int _bufferSize;
//   final List<int> _buffer;
//   int _bufferIndex;

//   ReverseByteReader(RandomAccessFile raf, int bufferSize)
//     : assert(raf != null),
//       assert(bufferSize != null),
//       _raf = raf,
//       _bufferSize = bufferSize,
//       _buffer = List<int>.filled(bufferSize, null),
//       _bufferIndex = 0;

//   int get nextByte {
//     if (_bufferIndex == 0) {
//       int newPos = _raf.positionSync() - _bufferSize;
//       if (newPos < 0) return -1;
//       _raf.setPositionSync(newPos);
//       _raf.readIntoSync(_buffer);
//       _bufferIndex = _buffer.length < _bufferSize
//         ? _buffer.length - 1
//         : _bufferSize - 1;
//     }
//     int b = _buffer[_bufferIndex];
//     _bufferIndex--;
//     return b;
//   }

//   int fixReadPosition() {
//     int difference = _buffer.length - _bufferIndex;
//     int filePosition = _raf.positionSync();
//     if (difference == 0) return filePosition;
//     filePosition -= difference;
//     _raf.setPositionSync(filePosition);
//     return filePosition;
//   }
// }